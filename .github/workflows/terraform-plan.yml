name: Terraform Plan

on:
  pull_request:
    paths:
      - 'iac/**'
      - 'website/**'
      - 'templates/**'

env:
  PYTHON_VERSION: '3.11'
  POETRY_VERSION: '2.0.1'
  SERVICE_ACCOUNT: 'github-actions-service-account@cal-itp-data-infra.iam.gserviceaccount.com'
  WORKLOAD_IDENTITY_PROVIDER: 'projects/1005246706141/locations/global/workloadIdentityPools/github-actions/providers/reports'
  PROJECT_ID: 'cal-itp-data-infra'
  REPORTS_DATA_BUCKET: 'calitp-reports-data'

jobs:
  plan:
    name: Plan
    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write
      pull-requests: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Authenticate Google Service Account
        uses: google-github-actions/auth@v2
        with:
          create_credentials_file: true
          project_id: ${{ env.PROJECT_ID }}
          workload_identity_provider: ${{ env.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ env.SERVICE_ACCOUNT }}

      - name: Setup GCloud utilities
        uses: google-github-actions/setup-gcloud@v2

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Cache Poetry
        uses: actions/cache@v3
        with:
          path: ~/.cache/pypoetry
          key: poetry-cache-${{ runner.os }}-python-${{ env.PYTHON_VERSION }}-poetry-${{ env.POETRY_VERSION }}

      - name: Setup Poetry
        uses: abatilo/actions-poetry@v3
        with:
          poetry-version: ${{ env.POETRY_VERSION }}

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version-file: website/package.json
          cache: npm
          cache-dependency-path: website/package-lock.json

      - name: Cache Python packages
        uses: actions/cache@v3
        with:
          path: ~/.local
          key: python-cache-${{ runner.os }}-python-${{ env.PYTHON_VERSION }}-lock-${{ hashFiles('warehouse/poetry.lock') }}-${{ hashFiles('.github/workflows/*.yml') }}

      - name: Install dependencies
        working-directory: website
        run: poetry install

      - name: Cache data
        uses: actions/cache@v4
        with:
          path: reports/outputs
          key: ${{ runner.os }}-reports-outputs

      - name: Download latest data
        run: gsutil -m rsync -r gs://${{ env.REPORTS_DATA_BUCKET }}/report_gtfs_schedule/ ./reports/outputs/

      - name: Build website
        working-directory: website
        run: poetry run npm run build

      - name: Terraform Formatting
        uses: dflook/terraform-fmt-check@v2
        with:
          path: iac/

      - name: Terraform Validation
        uses: dflook/terraform-validate@v2
        with:
          path: iac/

      - name: Terraform Plan
        uses: dflook/terraform-plan@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          add_github_comment: changes-only
          path: iac/
